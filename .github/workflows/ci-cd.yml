name: CI/CD GKE Deployment

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v3

    # Setup Python for running tests
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # Install Python dependencies
    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run tests
    - name: Test
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }} # this should be a VPC address
      run: pytest app/tests/

    #TBD
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: testproject-464712
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    # The building process should be handled better with dynamic tags etc but lets keep it simple
    - name: Docker auth
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      run: |
        echo "$GCP_SA_KEY" > "${HOME}/gcloud-key.json"
        gcloud auth activate-service-account --key-file="${HOME}/gcloud-key.json"
        gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet

    - name: Build image
      run: docker build -t europe-west3-docker.pkg.dev/testproject-464712/mir-test-repo/mir-test:latest .

    - name: Push image
      run: docker push europe-west3-docker.pkg.dev/testproject-464712/mir-test-repo/mir-test:latest

    - name: Get creds
      run: gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region europe-west3

    - name: Install gke-gcloud-auth-plugin
      run: gcloud components install gke-gcloud-auth-plugin --quiet

    # Create or update Kubernetes secret for DATABASE_URL
    - name: Create secret
      run: |
        kubectl create secret generic db-url-secret \
          --from-literal=DATABASE_URL="${{ secrets.DATABASE_URL }}" \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl rollout status deployment/mir-test